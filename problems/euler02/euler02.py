#!/usr/bin/python
# Imports #
import sys
sys.path.insert(0, "../../include/python/");
import eulersupport;
import eulermath;

# Functions #
# Returns the next term in the Fibonacci sequence.

# Problem description:
# Each new term in the Fibonacci sequence is generated by adding the previous two
# terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.
def run(upperbound):
    result = 0; #Sum of even-valued elements.

    for n in eulermath.fibonacci(1, 2):
        #if is even add it to result.
        if(n % 2 == 0):
            result += n;

        #If exceed the value, get out.
        if(n > upperbound):
            break;


    #Report Completion.
    eulersupport.write_output(result);

def run_full():
    eulersupport.name = "euler02";
    run(4000000);

def run_test():
    eulersupport.name = "euler02-Test";
    eulersupport.write_output("I'd no tests. :(");

def main():
    run_mode = eulersupport.get_run_mode();
    if(run_mode == eulersupport.kRunModeFull):
        run_full();
    else:
        run_test();

if __name__ == '__main__':
    main();
