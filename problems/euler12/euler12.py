#!/usr/bin/python
# Imports #
import sys;
sys.path.insert(0, "../../include/python");
import eulersupport;
import eulermath;

# Functions #
# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:
#     1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five
# hundred divisors?
def run(upperbound):

    result = 0;
    for n in eulermath.triangle_numbers(1):
        count = eulermath.factors_count(n);

        eulersupport.log(n, count);

        if(count > upperbound):
            result = n;
            break;

    #Report Completion.
    eulersupport.write_output(result);

def run_full():
    eulersupport.name = "euler12";
    run(500);

def run_test():
    eulersupport.name = "euler12-Test";
    run(5);

def main():
    run_mode = eulersupport.get_run_mode();
    if(run_mode == eulersupport.kRunModeFull):
        run_full();
    else:
        run_test();

if __name__ == '__main__':
    main();
