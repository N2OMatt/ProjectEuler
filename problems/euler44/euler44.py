#!/usr/bin/python
# -*- coding: utf8 -*-

# Imports #
import sys
sys.path.insert(0, "../../include/python/");
import eulersupport;
import eulermath;

# Functions #
# Problem description:
# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
# The first ten pentagonal numbers are:
#     1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
# 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
# difference are pentagonal and D = |Pk − Pj| is minimised; what
# is the value of D?
def run():
    for j in eulermath.infinite_range(1):
        Pj = eulermath.pentagonal_number(j);

        for k in xrange(1, j):
            Pk = eulermath.pentagonal_number(k);
            s = Pj + Pk;
            d = Pj - Pk;

            if(eulermath.is_pentagonal_number(s) and eulermath.is_pentagonal_number(d)):
                eulersupport.write_output(d);
                return;

def run_full():
    eulersupport.name = "euler44";
    run();

def run_test():
    eulersupport.name = "euler44-Test";

def main():
    run_mode = eulersupport.get_run_mode();
    if(run_mode == eulersupport.kRunModeFull):
        run_full();
    else:
        run_test();

if __name__ == '__main__':
    main();
